<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
	<Description />

<FaultRules>
	<FaultRule name="InvalidApiKey">
		<Condition>fault.name = "invalid_client"</Condition>
		<Step>
			<FaultRules />
			<Name>authenticationFailed</Name>
		</Step>
	</FaultRule>
	<FaultRule name="InvalidProduct">
		<Condition>fault.name = "InvalidAPICallAsNoApiProductMatchFound"</Condition>
		<Step>
			<FaultRules />
			<Name>authorizationFailed</Name>
		</Step>
	</FaultRule>
	<FaultRule name="InvalidClientId">
		<Condition>(fault.name = "FailedToResolveAPIKey") or (fault.name = "InvalidApiKeyForGivenResource") or (fault.name = "InvalidApiKey") </Condition>
		<Step>
			<Name>RaiseFault.ApplicationKey</Name>
		</Step>
	</FaultRule>
	<FaultRule name="InvalidAccessToken">
		<Condition>(fault.name = "invalid_access_token") or (fault.name = "access_token_expired") </Condition>
		<Step>
			<Name>RaiseFault.InvalidAccessToken</Name>
		</Step>
	</FaultRule>
	
</FaultRules>

	<PreFlow>
		<Request>
			<Step>
				<Condition>(request.header.Authorization.values.count = 0)</Condition>
				<FaultRules />
				<Name>challengeResponse</Name>
			</Step>
			<Step>
				<FaultRules />
				<Name>setGrantType</Name>
			</Step>
			<Step>
				<Condition>(request.header.Authorization =| "Basic") </Condition>
				<FaultRules />
				<Name>validateBasicAuth</Name>
			</Step>
		</Request>
	</PreFlow>
	
	<Flows>
			<Flow name="Create Consent">
			<Request>
				<Step>
					<Name>ExtractPOSTRequestJSONVariables</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Name>AssignRequestPayloadToFlowVar</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Name>ValidateRequestJSONParams_JS</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>errorType != null</Condition>
					<Name>RaiseFault_BadRequest</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>access_token != null</Condition>
					<Name>AccessTokenValidation</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>access_token != null</Condition>
					<Name>AssignApplicationNameFromAccessToken</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>access_token = null || application_name = null</Condition>
					<Name>VerifyClientId</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>application_name = null</Condition>
					<Name>AssignApplicationNameFromVerifyClientId</Name>
					<FaultRules></FaultRules>
				</Step>
					<Step>
					<Name>DeleteExistingSimilarConsent</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Name>ModifyRequestToAddParams</Name>
					<FaultRules></FaultRules>
				</Step>
			</Request>
			<Response>
			<Step>
				<Condition>response.status.code = 200</Condition>
				<Name>ExtractTargetResponseParameters</Name>
				<FaultRules></FaultRules>
			</Step>
			<Step>
				<Condition>response.status.code = 200</Condition>
				<Name>CreateResposneContent_JS</Name>
				<FaultRules></FaultRules>
			</Step>
			<Step>
				<Condition>response.status.code = 200</Condition>
				<Name>AssignCreateConsentFlowResponse</Name>
				<FaultRules></FaultRules>
			</Step>
			</Response>

			<Condition>(proxy.pathsuffix MatchesPath &quot;/consents&quot;) and (request.verb = &quot;POST&quot;)</Condition>
		</Flow>
			<Flow name="Update Consent">
			<Request>
				<Step>
					<Name>ExtractPUTRequestJSONVariables</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Name>ValidatePUTRequestJSONParams_JS</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>errorType != null</Condition>
					<Name>RaiseFault_BadRequest</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>access_token != null</Condition>
					<Name>AccessTokenValidation</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>access_token != null</Condition>
					<Name>AssignApplicationNameFromAccessToken</Name>
					<FaultRules></FaultRules>
				</Step>
				
				<Step>
					<Name>ModifyPUTRequestToAddParams</Name>
					<FaultRules></FaultRules>
				</Step>
			</Request>
			<Response>

			</Response>

			<Condition>(proxy.pathsuffix MatchesPath &quot;/consents/{consentId}&quot;) and (request.verb = &quot;PUT&quot;)</Condition>
		</Flow>
			<Flow name="Validate Consent">
			<Request>
				
				<Step>
					<Condition>request.queryparam.client_id = null or request.queryparam.client_id = "" or request.queryparam.user_id = null or request.queryparam.user_id = ""  </Condition>
					<Name>RaiseFault_InvalidQueryParam</Name>
					<FaultRules></FaultRules>
				</Step>
			</Request>
			<Response>

			</Response>

			<Condition>(proxy.pathsuffix MatchesPath &quot;/consents/validate&quot;) and (request.verb = &quot;GET&quot;) and (request.queryparam.user_id != null)</Condition>
		</Flow>
			<Flow name="Get Consent By User">
			<Request>

			</Request>
			<Response>

			</Response>

			<Condition>(proxy.pathsuffix MatchesPath &quot;/consents&quot;) and (request.verb = &quot;GET&quot;) and (request.queryparam.user_id != null)</Condition>
		</Flow>
			<Flow name="SSO Token Validation">
			<Request>

				<Step>
					<Condition>request.queryparam.action != "refresh" and request.queryparam.action != "revoke"  and request.queryparam.action != "validate"  </Condition>
					<Name>RaiseFault_Invalid_SSO_Operation</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Name>SetTokenLifeInRequest</Name>
				</Step>

			</Request>
			<Response>

			</Response>

			<Condition>(proxy.pathsuffix MatchesPath &quot;/token/sso/{sso_token}&quot;) and (request.verb = &quot;GET&quot;)</Condition>
		</Flow>		
			<Flow name="Create SSO Token">
			<Request>
				<Step>
					<Name>ExtractCreateSSOTokenReqVariables</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Name>ValidateCreateSSOTokenReqVariables_JS</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>errorType != null</Condition>
					<Name>RaiseFault_BadRequest</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>access_token != null</Condition>
					<Name>AccessTokenValidation</Name>
					<FaultRules></FaultRules>
				</Step>
				<Step>
					<Condition>access_token != null</Condition>
					<Name>AssignApplicationNameFromAccessToken</Name>
					<FaultRules></FaultRules>
				</Step>
				
				<Step>
					<Name>ModifyCreateSSOTokenRequestToAddParams</Name>
					<FaultRules></FaultRules>
				</Step>
			</Request>
			<Response>

			</Response>

			<Condition>(proxy.pathsuffix MatchesPath &quot;/token/sso/&quot;) and (request.verb = &quot;POST&quot;)</Condition>
		</Flow>		
			<Flow name="OPTIONS">
			<Condition>(request.verb = &quot;OPTIONS&quot;)</Condition>
			<Request>
			</Request>
			<Response>
				<Step>
					<Name>Option.AssignResponse</Name>
					<FaultRules></FaultRules>
				</Step>
			</Response>
		</Flow>
	</Flows>

<PostFlow>
<Response>
	<Step>
		<Condition>(response.header.error_code != null)</Condition>
		<FaultRules />
		<Name>ConstructErrorResponse</Name>
	</Step>
</Response>

</PostFlow>


	<HTTPProxyConnection>
		<BasePath>/identity</BasePath>
		<VirtualHost>secure</VirtualHost>
	</HTTPProxyConnection>
	<RouteRule name="default">
		<TargetEndpoint>default</TargetEndpoint>
	</RouteRule>
</ProxyEndpoint>
