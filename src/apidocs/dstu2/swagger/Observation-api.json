{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Observation API",
        "description": "FHIR Observation resource API documentation"
    },
    "host": "fhirsandbox-test.apigee.net",
    "basePath": "/v2/Observation",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
    "paths": {
        "": {
            "get": {
                "description": "Returns Observation based on filter criteria OR Provides provision for pagination (stateid, page, page_size & _pretty are query parameters used for Paging).",
    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",
												
                        "type": "string"
                    },
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					
				{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of Observations that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "category",
                        "in": "query",
                        "description": "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code",
                        "in": "query",
                        "description": "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code-value-concept",
                        "in": "query",
                        "description": "Combination of code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "code-value-date",
                        "in": "query",
                        "description": "Combination of code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "code-value-quantity",
                        "in": "query",
                        "description": "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "code-value-string",
                        "in": "query",
                        "description": "Combination of code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-code",
                        "in": "query",
                        "description": "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-concept",
                        "in": "query",
                        "description": "Combination of component code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-date",
                        "in": "query",
                        "description": "Combination of component code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-quantity",
                        "in": "query",
                        "description": "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-string",
                        "in": "query",
                        "description": "Combination of component code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-concept",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-quantity",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
                        "type": "string"
                    },
					{
                        "name": "component-value-string",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
                        "type": "string"
                    },
					{
                        "name": "data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "device",
                        "in": "query",
                        "description": "The Device that generated the observation data (Device, DeviceMetric).",
                        "type": "string"
                    },
					{
                        "name": "encounter",
                        "in": "query",
                        "description": "Healthcare event related to the observation (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The subject that the observation is about (Patient).",
                        "type": "string"
                    },
					{
                        "name": "performer",
                        "in": "query",
                        "description": "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "related",
                        "in": "query",
                        "description": "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
                        "type": "string"
                    },
					{
                        "name": "related-target",
                        "in": "query",
                        "description": "Observation that is related to this one (Observation).",
                        "type": "string"
                    },
					{
                        "name": "related-type",
                        "in": "query",
                        "description": "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "specimen",
                        "in": "query",
                        "description": "Specimen used for this observation (Specimen).",
                        "type": "string"
                    },
					{
                        "name": "status",
                        "in": "query",
                        "description": "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "subject",
                        "in": "query",
                        "description": "The subject that the observation is about (Device, Location, Patient, Group).",
                        "type": "string"
                    },
					{
                        "name": "value-concept",
                        "in": "query",
                        "description": "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-quantity",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
                        "type": "string"
                    },
					{
                        "name": "value-string",
                        "in": "query",
                        "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
                        "type": "string"
                    },
					{
                        "name": "stateid",
                        "in": "query",
                        "description": "Unique id associated with a page.",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Observation resource offset.",
                        "type": "number"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of Observation resources requested in a page.",
                        "type": "number"
                    },
                    {
                        "name": "_pretty",
                        "in": "query",
                        "description": "Set true to get prettified data.",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Observation bundle"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/_search": {
            "get": {
                "description": "Search Observations based on some filter criteria.",
				    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
                "parameters": [
					{
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",
												
                        "type": "string"
                    },
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					
				{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of Observations that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "category",
                        "in": "query",
                        "description": "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code",
                        "in": "query",
                        "description": "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code-value-concept",
                        "in": "query",
                        "description": "Combination of code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "code-value-date",
                        "in": "query",
                        "description": "Combination of code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "code-value-quantity",
                        "in": "query",
                        "description": "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "code-value-string",
                        "in": "query",
                        "description": "Combination of code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-code",
                        "in": "query",
                        "description": "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-concept",
                        "in": "query",
                        "description": "Combination of component code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-date",
                        "in": "query",
                        "description": "Combination of component code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-quantity",
                        "in": "query",
                        "description": "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-string",
                        "in": "query",
                        "description": "Combination of component code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-concept",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-quantity",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
                        "type": "string"
                    },
					{
                        "name": "component-value-string",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
                        "type": "string"
                    },
					{
                        "name": "data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "device",
                        "in": "query",
                        "description": "The Device that generated the observation data (Device, DeviceMetric).",
                        "type": "string"
                    },
					{
                        "name": "encounter",
                        "in": "query",
                        "description": "Healthcare event related to the observation (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The subject that the observation is about (Patient).",
                        "type": "string"
                    },
					{
                        "name": "performer",
                        "in": "query",
                        "description": "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "related",
                        "in": "query",
                        "description": "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
                        "type": "string"
                    },
					{
                        "name": "related-target",
                        "in": "query",
                        "description": "Observation that is related to this one (Observation).",
                        "type": "string"
                    },
					{
                        "name": "related-type",
                        "in": "query",
                        "description": "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "specimen",
                        "in": "query",
                        "description": "Specimen used for this observation (Specimen).",
                        "type": "string"
                    },
					{
                        "name": "status",
                        "in": "query",
                        "description": "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "subject",
                        "in": "query",
                        "description": "The subject that the observation is about (Device, Location, Patient, Group).",
                        "type": "string"
                    },
					{
                        "name": "value-concept",
                        "in": "query",
                        "description": "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-quantity",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
                        "type": "string"
                    },
					{
                        "name": "value-string",
                        "in": "query",
                        "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Observation bundle"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
			"post": {
			"description": "This interaction searches a set of Observations based on some filter criteria. Search interactions take a series of parameters of name'='value pairs encoded as an application/x-www-form-urlencoded submission for a POST.",
			    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
			"parameters": [
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
					"in": "header",  
											
					"type": "string"
				},
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "Content-Type",
					"in": "header",
					"required": true,
					"description": "Specifies the format of data in body",
					"type": "string",
					"default": "application/x-www-form-urlencoded"
				},
				{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of Observations that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any Observations that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "category",
                        "in": "query",
                        "description": "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code",
                        "in": "query",
                        "description": "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code-value-concept",
                        "in": "query",
                        "description": "Combination of code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "code-value-date",
                        "in": "query",
                        "description": "Combination of code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "code-value-quantity",
                        "in": "query",
                        "description": "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "code-value-string",
                        "in": "query",
                        "description": "Combination of code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-code",
                        "in": "query",
                        "description": "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-concept",
                        "in": "query",
                        "description": "Combination of component code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-date",
                        "in": "query",
                        "description": "Combination of component code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-quantity",
                        "in": "query",
                        "description": "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-string",
                        "in": "query",
                        "description": "Combination of component code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-concept",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-quantity",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
                        "type": "string"
                    },
					{
                        "name": "component-value-string",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
                        "type": "string"
                    },
					{
                        "name": "data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "device",
                        "in": "query",
                        "description": "The Device that generated the observation data (Device, DeviceMetric).",
                        "type": "string"
                    },
					{
                        "name": "encounter",
                        "in": "query",
                        "description": "Healthcare event related to the observation (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The subject that the observation is about (Patient).",
                        "type": "string"
                    },
					{
                        "name": "performer",
                        "in": "query",
                        "description": "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "related",
                        "in": "query",
                        "description": "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
                        "type": "string"
                    },
					{
                        "name": "related-target",
                        "in": "query",
                        "description": "Observation that is related to this one (Observation).",
                        "type": "string"
                    },
					{
                        "name": "related-type",
                        "in": "query",
                        "description": "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "specimen",
                        "in": "query",
                        "description": "Specimen used for this observation (Specimen).",
                        "type": "string"
                    },
					{
                        "name": "status",
                        "in": "query",
                        "description": "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "subject",
                        "in": "query",
                        "description": "The subject that the observation is about (Device, Location, Patient, Group).",
                        "type": "string"
                    },
					{
                        "name": "value-concept",
                        "in": "query",
                        "description": "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-quantity",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
                        "type": "string"
                    },
					{
                        "name": "value-string",
                        "in": "query",
                        "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
                        "type": "string"
                    },
					{
                        "name": "_id",
                        "in": "formData",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "formData",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "formData",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "formData",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "formData",
                        "description": "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "formData",
                        "description": "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "formData",
                        "description": "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "formData",
                        "description": "The number of Observations that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "formData",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "formData",
                        "description": "This parameter can be used to fetch a particular Observation, and any Observations that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "formData",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "formData",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "formData",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "formData",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "category",
                        "in": "formData",
                        "description": "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code",
                        "in": "formData",
                        "description": "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code-value-concept",
                        "in": "formData",
                        "description": "Combination of code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "code-value-date",
                        "in": "formData",
                        "description": "Combination of code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "code-value-quantity",
                        "in": "formData",
                        "description": "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "code-value-string",
                        "in": "formData",
                        "description": "Combination of code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-code",
                        "in": "formData",
                        "description": "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-concept",
                        "in": "formData",
                        "description": "Combination of component code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-date",
                        "in": "formData",
                        "description": "Combination of component code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-quantity",
                        "in": "formData",
                        "description": "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-string",
                        "in": "formData",
                        "description": "Combination of component code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-data-absent-reason",
                        "in": "formData",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-concept",
                        "in": "formData",
                        "description": "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-quantity",
                        "in": "formData",
                        "description": "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
                        "type": "string"
                    },
					{
                        "name": "component-value-string",
                        "in": "formData",
                        "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
                        "type": "string"
                    },
					{
                        "name": "data-absent-reason",
                        "in": "formData",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "formData",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "formData",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "device",
                        "in": "formData",
                        "description": "The Device that generated the observation data (Device, DeviceMetric).",
                        "type": "string"
                    },
					{
                        "name": "encounter",
                        "in": "formData",
                        "description": "Healthcare event related to the observation (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "formData",
                        "description": "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "formData",
                        "description": "The subject that the observation is about (Patient).",
                        "type": "string"
                    },
					{
                        "name": "performer",
                        "in": "formData",
                        "description": "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "related",
                        "in": "formData",
                        "description": "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
                        "type": "string"
                    },
					{
                        "name": "related-target",
                        "in": "formData",
                        "description": "Observation that is related to this one (Observation).",
                        "type": "string"
                    },
					{
                        "name": "related-type",
                        "in": "formData",
                        "description": "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "specimen",
                        "in": "formData",
                        "description": "Specimen used for this observation (Specimen).",
                        "type": "string"
                    },
					{
                        "name": "status",
                        "in": "formData",
                        "description": "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "subject",
                        "in": "formData",
                        "description": "The subject that the observation is about (Device, Location, Patient, Group).",
                        "type": "string"
                    },
					{
                        "name": "value-concept",
                        "in": "formData",
                        "description": "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "value-date",
                        "in": "formData",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-date",
                        "in": "formData",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-quantity",
                        "in": "formData",
                        "description": "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
                        "type": "string"
                    },
					{
                        "name": "value-string",
                        "in": "formData",
                        "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
                        "type": "string"
                    }
				],
				"responses": {
					"200": {
						"description": "Observation Bundle"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
        "/{id}": {
            "get": {
                "description": "Returns details of observations having id given in path",
                    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
						"pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",                   
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Observation instance"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/$meta": {
		"get": {
			"description": "Retrieves a summary of the profiles, tags, and security labels for Observation.",
			    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
					"in": "header",
					
					"type": "string"
				}
			],
			"responses": {
				"200": {
					"description": "List of all tags, profiles and security labels used for Observation."
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	},
	"/{id}/$meta": {
		"get": {
			"description": "Retrieves a summary of the profiles, tags, and security labels for given Observation. Observation resource.",
			    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "id",
					"description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
					"in": "header",
					
					"type": "string"
				}
			],
			"responses": {
				"200": {
					"description": "List of all tags, profiles and security labels affixed to the nominated Observation."
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	},
	"/{id}/_history/{vid}/$meta": {
            "get": {
                "description": "Retrieves a summary of the profiles, tags, and security labels for given version of the Observation.",
                    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "vid",
                        "description": "Version Id of observation.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",
                        
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all tags, profiles and security labels affixed to the nominated version of the resource."
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
	"/_history": {
            "get": {
                "description": "It retrieves the history of all resources of Observation.",
                    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					{
                        "name": "_count",
                        "in": "query",
                        "description": "Number of records needed in response.",
                        "type": "integer"
                    },
					{
                        "name": "_since",
                        "in": "query",
                        "description": "Only include Observation versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
                        "type":"string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"				
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",
												
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Observation instance"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/{id}/_history": {
            "get": {
                "description": "It retrieves the history of a particular Observation identified by the given id in path.",
                    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					{
                        "name": "_count",
                        "in": "query",
                        "description": "Number of records needed in response.",
                        "type": "integer"
                    },
					{
                        "name": "_since",
                        "in": "query",
                        "description": "Only include Observation versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
                        "type":"string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"				
                    },
                    {
                        "name": "id",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
						"pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",  
						
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Observation instance"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/{id}/_history/{vid}": {
		"get": {
			"description": "This interaction preforms a version specific read of Observation resource.",
			    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "id",
					"description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "vid",
					"description": "Version Id of observation",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header", 
						
                        "type": "string"
                    }
			],
			"responses": {
				"200": {
					"description": "Observation instance"
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	},
	"/{id}/{type}": {
		"get": {
			"description": "Search the specified resource type in Observation compartment.",
			    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "id",
					"description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "type",
					"description": "Type of Observation",
					"type": "string",
					"required": true,
					"in": "path"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                    "in": "header",                   
                    "type": "string"
                },
				
				{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of Observations that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "category",
                        "in": "query",
                        "description": "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code",
                        "in": "query",
                        "description": "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "code-value-concept",
                        "in": "query",
                        "description": "Combination of code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "code-value-date",
                        "in": "query",
                        "description": "Combination of code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "code-value-quantity",
                        "in": "query",
                        "description": "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "code-value-string",
                        "in": "query",
                        "description": "Combination of code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-code",
                        "in": "query",
                        "description": "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-concept",
                        "in": "query",
                        "description": "Combination of component code and concept. Value should be in the form: [code]$[concept].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-date",
                        "in": "query",
                        "description": "Combination of component code and date. Value should be in the form: [code]$[date].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-quantity",
                        "in": "query",
                        "description": "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
                        "type": "string"
                    },
					{
                        "name": "component-code-value-string",
                        "in": "query",
                        "description": "Combination of component code and string. Value should be in the form: [code]$[string].",
                        "type": "string"
                    },
					{
                        "name": "component-data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-concept",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "component-value-quantity",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
                        "type": "string"
                    },
					{
                        "name": "component-value-string",
                        "in": "query",
                        "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
                        "type": "string"
                    },
					{
                        "name": "data-absent-reason",
                        "in": "query",
                        "description": "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "device",
                        "in": "query",
                        "description": "The Device that generated the observation data (Device, DeviceMetric).",
                        "type": "string"
                    },
					{
                        "name": "encounter",
                        "in": "query",
                        "description": "Healthcare event related to the observation (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The subject that the observation is about (Patient).",
                        "type": "string"
                    },
					{
                        "name": "performer",
                        "in": "query",
                        "description": "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "related",
                        "in": "query",
                        "description": "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
                        "type": "string"
                    },
					{
                        "name": "related-target",
                        "in": "query",
                        "description": "Observation that is related to this one (Observation).",
                        "type": "string"
                    },
					{
                        "name": "related-type",
                        "in": "query",
                        "description": "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "specimen",
                        "in": "query",
                        "description": "Specimen used for this observation (Specimen).",
                        "type": "string"
                    },
					{
                        "name": "status",
                        "in": "query",
                        "description": "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "subject",
                        "in": "query",
                        "description": "The subject that the observation is about (Device, Location, Patient, Group).",
                        "type": "string"
                    },
					{
                        "name": "value-concept",
                        "in": "query",
                        "description": "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-date",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "value-quantity",
                        "in": "query",
                        "description": "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
                        "type": "string"
                    },
					{
                        "name": "value-string",
                        "in": "query",
                        "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
                        "type": "string"
                    }
			],
			"responses": {
				"200": {
					"description": "The set of resources associated with a particular observation."
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	}
    }
}