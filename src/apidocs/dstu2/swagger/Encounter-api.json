{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Encounter API",
        "description": "Encounter API documentation"
    },
    "host": "fhirsandbox-test.apigee.net",
    "basePath": "/v2/Encounter",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],
    "paths": {
        "": {
            "get": {
                "description": "Returns Encounters based on filter criteria OR Provides provision for pagination (stateid, page, page_size & _pretty are query parameters used for Paging).",
    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],                
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",  
												
                        "type": "string"
                    },
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "appointment",
                        "in": "query",
                        "description": "The appointment that scheduled this encounter.",
                        "type": "string"
                    },
					{
                        "name": "condition",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "episodeofcare",
                        "in": "query",
                        "description": "An episode of care that this encounter should be recorded against (EpisodeOfCare).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "Identifier(s) by which this encounter is known. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "incomingreferral",
                        "in": "query",
                        "description": "Incoming Referral Request (ReferralRequest).",
                        "type": "string"
                    },
					{
                        "name": "indication",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "length",
                        "in": "query",
                        "description": "Length of encounter in days.",
                        "type": "integer"
                    },
					{
                        "name": "location",
                        "in": "query",
                        "description": "Location the encounter takes place (Location).",
                        "type": "string"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "part-of",
                        "in": "query",
                        "description": "Another Encounter this encounter is part of (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "participant",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "participant-type",
                        "in": "query",
                        "description": "Role of participant in encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "practitioner",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner).",
                        "type": "string"
                    },
					{
                        "name": "procedure",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "reason",
                        "in": "query",
                        "description": "Reason the encounter takes place (code). Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "special-arrangement",
                        "in": "query",
                        "description": "Wheelchair, translator, stretcher, etc. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "planned | arrived | in-progress | onleave | finished | cancelled. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "type",
                        "in": "query",
                        "description": "Specific type of encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "stateid",
                        "in": "query",
                        "description": "Unique id associated with a page.",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Encounter resource offset.",
                        "type": "number"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of Encounter resources requested in a page.",
                        "type": "number"
                    },
                    {
                        "name": "_pretty",
                        "in": "query",
                        "description": "Set true to get prettified data.",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Encounter bundle"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/_search": {
            "get": {
                "description": "Search Encounters based on some filter criteria.",
                "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],    
                "parameters": [
					{
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",  
												
                        "type": "string"
                    },
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "appointment",
                        "in": "query",
                        "description": "The appointment that scheduled this encounter.",
                        "type": "string"
                    },
					{
                        "name": "condition",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "episodeofcare",
                        "in": "query",
                        "description": "An episode of care that this encounter should be recorded against (EpisodeOfCare).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "Identifier(s) by which this encounter is known. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "incomingreferral",
                        "in": "query",
                        "description": "Incoming Referral Request (ReferralRequest).",
                        "type": "string"
                    },
					{
                        "name": "indication",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "length",
                        "in": "query",
                        "description": "Length of encounter in days.",
                        "type": "integer"
                    },
					{
                        "name": "location",
                        "in": "query",
                        "description": "Location the encounter takes place (Location).",
                        "type": "string"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "part-of",
                        "in": "query",
                        "description": "Another Encounter this encounter is part of (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "participant",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "participant-type",
                        "in": "query",
                        "description": "Role of participant in encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "practitioner",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner).",
                        "type": "string"
                    },
					{
                        "name": "procedure",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "reason",
                        "in": "query",
                        "description": "Reason the encounter takes place (code). Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "special-arrangement",
                        "in": "query",
                        "description": "Wheelchair, translator, stretcher, etc. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "planned | arrived | in-progress | onleave | finished | cancelled. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "type",
                        "in": "query",
                        "description": "Specific type of encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Encounter bundle"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
			"post": {
			"description": "This interaction searches a set of Encounters based on some filter criteria. Search interactions take a series of parameters of name'='value pairs encoded as an application/x-www-form-urlencoded submission for a POST.",
		    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],	
			"parameters": [
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
					"in": "header",  
											
					"type": "string"
				},
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "Content-Type",
					"in": "header",
					"required": true,
					"description": "Specifies the format of data in body.",
					"type": "string",
					"default": "application/x-www-form-urlencoded"
				},
				{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "appointment",
                        "in": "query",
                        "description": "The appointment that scheduled this encounter.",
                        "type": "string"
                    },
					{
                        "name": "condition",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "episodeofcare",
                        "in": "query",
                        "description": "An episode of care that this encounter should be recorded against (EpisodeOfCare).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "Identifier(s) by which this encounter is known. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "incomingreferral",
                        "in": "query",
                        "description": "Incoming Referral Request (ReferralRequest).",
                        "type": "string"
                    },
					{
                        "name": "indication",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "length",
                        "in": "query",
                        "description": "Length of encounter in days.",
                        "type": "integer"
                    },
					{
                        "name": "location",
                        "in": "query",
                        "description": "Location the encounter takes place (Location).",
                        "type": "string"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "part-of",
                        "in": "query",
                        "description": "Another Encounter this encounter is part of (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "participant",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "participant-type",
                        "in": "query",
                        "description": "Role of participant in encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "practitioner",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner).",
                        "type": "string"
                    },
					{
                        "name": "procedure",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "reason",
                        "in": "query",
                        "description": "Reason the encounter takes place (code). Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "special-arrangement",
                        "in": "query",
                        "description": "Wheelchair, translator, stretcher, etc. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "planned | arrived | in-progress | onleave | finished | cancelled. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "type",
                        "in": "query",
                        "description": "Specific type of encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "_id",
                        "in": "formData",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "formData",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "formData",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "formData",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "formData",
                        "description": "This parameter searches on the profile element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "formData",
                        "description": "This parameter searches on the tags element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "formData",
                        "description": "This parameter searches on the security element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "formData",
                        "description": "The number of resources that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "formData",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "formData",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "formData",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "formData",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "formData",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "formData",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "appointment",
                        "in": "formData",
                        "description": "The appointment that scheduled this encounter.",
                        "type": "string"
                    },
					{
                        "name": "condition",
                        "in": "formData",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "formData",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "formData",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "episodeofcare",
                        "in": "formData",
                        "description": "An episode of care that this encounter should be recorded against (EpisodeOfCare).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "formData",
                        "description": "Identifier(s) by which this encounter is known. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "incomingreferral",
                        "in": "formData",
                        "description": "Incoming Referral Request (ReferralRequest).",
                        "type": "string"
                    },
					{
                        "name": "indication",
                        "in": "formData",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "length",
                        "in": "formData",
                        "description": "Length of encounter in days.",
                        "type": "integer"
                    },
					{
                        "name": "location",
                        "in": "formData",
                        "description": "Location the encounter takes place (Location).",
                        "type": "string"
                    },
					{
                        "name": "location-period",
                        "in": "formData",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "location-period",
                        "in": "formData",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "part-of",
                        "in": "formData",
                        "description": "Another Encounter this encounter is part of (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "participant",
                        "in": "formData",
                        "description": "Persons involved in the encounter other than the patient (Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "participant-type",
                        "in": "formData",
                        "description": "Role of participant in encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "formData",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "practitioner",
                        "in": "formData",
                        "description": "Persons involved in the encounter other than the patient (Practitioner).",
                        "type": "string"
                    },
					{
                        "name": "procedure",
                        "in": "formData",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "reason",
                        "in": "formData",
                        "description": "Reason the encounter takes place (code). Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "special-arrangement",
                        "in": "formData",
                        "description": "Wheelchair, translator, stretcher, etc. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "planned | arrived | in-progress | onleave | finished | cancelled. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "type",
                        "in": "formData",
                        "description": "Specific type of encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    }
				],
				"responses": {
					"200": {
						"description": "Encounter Bundle"
					},
					"default": {
						"description": "unexpected error"
					}
				}
			}
		},
        "/{id}": {
            "get": {
                "description": "Returns details of encounters having id given in path",
          "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],          
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
						"pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",                   
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Encounter instance"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/$meta": {
		"get": {
			"description": "Retrieves a summary of the profiles, tags, and security labels for Encounter.",
		    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],	
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
					"in": "header",
					
					"type": "string"
				}
			],
			"responses": {
				"200": {
					"description": "List of all tags, profiles and security labels used for Encounter."
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	},
	"/{id}/$meta": {
		"get": {
			"description": "Retrieves a summary of the profiles, tags, and security labels for given Encounter. ",
		    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],	
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "id",
					"description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
					"in": "header",
					
					"type": "string"
				}
			],
			"responses": {
				"200": {
					"description": "List of all tags, profiles and security labels affixed to the nominated resource."
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	},
	"/{id}/_history/{vid}/$meta": {
            "get": {
                "description": "Retrieves a summary of the profiles, tags, and security labels for given version of the Encounter.",
          "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],         
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "vid",
                        "description": "Version Id of Encounter.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",
                        
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all tags, profiles and security labels affixed to the nominated version of the resource."
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
	"/_history": {
            "get": {
                "description": "It retrieves the history of all resources of Encounter ",
          "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],          
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					{
                        "name": "_count",
                        "in": "query",
                        "description": "Number of records needed in response.",
                        "type": "integer"
                    },
					{
                        "name": "_since",
                        "in": "query",
                        "description": "Specify an instant to only include resource versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
                        "type":"string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"				
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header", 
												
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Encounter instance"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/{id}/_history": {
            "get": {
                "description": "It retrieves the history of a particular Encounter identified by the given id in path.",
          "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],          
                "parameters": [
                    {
                        "name": "_format",
                        "in": "query",
                        "description": "Format of data to be returned.",
                        "type": "string"
                    },
					{
                        "name": "_count",
                        "in": "query",
                        "description": "Number of records needed in response.",
                        "type": "integer"
                    },
					{
                        "name": "_since",
                        "in": "query",
                        "description": "Specify an instant to only include resource versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
                        "type":"string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"				
                    },
                    {
                        "name": "id",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
						"pattern": "[a-z0-9\\-\\.]{1,64}",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Specify access token for API in the following format: Bearer [access_token].",
                        
                        "type": "string"
                    },
					{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header",  
						
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Encounter instance"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
		"/{id}/_history/{vid}": {
		"get": {
			"description": "This interaction preforms a version specific read of Encounter resource.",
		    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],	
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "id",
					"description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "vid",
					"description": "Version Id of encounter",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
                        "name": "Accept",
						"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                        "in": "header", 
						
                        "type": "string"
                    }
			],
			"responses": {
				"200": {
					"description": "Encounter instance"
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	},
	"/{id}/{type}": {
		"get": {
			"description": "Search the specified resource type in Encounter compartment.",
		    "produces": [
        "application/json+fhir;charset=UTF-8",
        "application/xml+fhir;charset=UTF-8"
    ],	
			"parameters": [
				{
					"name": "_format",
					"in": "query",
					"description": "Format of data to be returned.",
					"type": "string"
				},
				{
					"name": "id",
					"description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
					"type": "string",
					"pattern": "[a-z0-9\\-\\.]{1,64}",
					"required": true,
					"in": "path"
				},
				{
					"name": "type",
					"description": "Type of Resource",
					"type": "string",
					"required": true,
					"in": "path"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Specify access token for API in the following format: Bearer [access_token].",
					
					"type": "string"
				},
				{
					"name": "Accept",
					"description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
                    "in": "header",                   
                    "type": "string"
                },
				{
                        "name": "_id",
                        "in": "query",
                        "description": "The logical resource id associated with the Encounter. Sample ids are: 5010, 4737, 3000, 3003, 4767.",
                        "type": "string",
                        "pattern": "[a-z0-9\\-\\.]{1,64}"
                    },
                    {
						"name": "_elements",
						"in": "query",
						"description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
						"type": "string"
					},
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The search parameter _lastUpdated can be used to select resources based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
                        "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
                    {
                        "name": "_profile",
                        "in": "query",
                        "description": "This parameter searches on the profile element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_tag",
                        "in": "query",
                        "description": "This parameter searches on the tags element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_security",
                        "in": "query",
                        "description": "This parameter searches on the security element in the meta element of the resource. Value can have following formats: [code] or [namespace]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page.",
                        "type": "integer"
                    },
                    {
                        "name": "_summary",
                        "in": "query",
                        "description": "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
                        "type": "boolean"
                    },
                    {
                        "name": "_include",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
                    {
                        "name": "_revinclude",
                        "in": "query",
                        "description": "This parameter can be used to fetch a particular resource, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
                        "type": "string"
                    },
					{
                        "name": "_sort",
                        "in": "query",
                        "description": "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:asc",
                        "in": "query",
                        "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "_sort:desc",
                        "in": "query",
                        "description": "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
                        "type": "string"
                    },
					{
                        "name": "appointment",
                        "in": "query",
                        "description": "The appointment that scheduled this encounter.",
                        "type": "string"
                    },
					{
                        "name": "condition",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "date",
                        "in": "query",
                        "description": "A date within the period the Encounter lasted. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "episodeofcare",
                        "in": "query",
                        "description": "An episode of care that this encounter should be recorded against (EpisodeOfCare).",
                        "type": "string"
                    },
					{
                        "name": "identifier",
                        "in": "query",
                        "description": "Identifier(s) by which this encounter is known. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "incomingreferral",
                        "in": "query",
                        "description": "Incoming Referral Request (ReferralRequest).",
                        "type": "string"
                    },
					{
                        "name": "indication",
                        "in": "query",
                        "description": "Reason the encounter takes place (resource).",
                        "type": "string"
                    },
					{
                        "name": "length",
                        "in": "query",
                        "description": "Length of encounter in days.",
                        "type": "integer"
                    },
					{
                        "name": "location",
                        "in": "query",
                        "description": "Location the encounter takes place (Location).",
                        "type": "string"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "location-period",
                        "in": "query",
                        "description": "Time period during which the patient was present at the location. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
                        "type": "string",
						"pattern":"([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
                    },
					{
                        "name": "part-of",
                        "in": "query",
                        "description": "Another Encounter this encounter is part of (Encounter).",
                        "type": "string"
                    },
					{
                        "name": "participant",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner, RelatedPerson).",
                        "type": "string"
                    },
					{
                        "name": "participant-type",
                        "in": "query",
                        "description": "Role of participant in encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "patient",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "practitioner",
                        "in": "query",
                        "description": "Persons involved in the encounter other than the patient (Practitioner).",
                        "type": "string"
                    },
					{
                        "name": "procedure",
                        "in": "query",
                        "description": "The patient present at the encounter (Patient).",
                        "type": "string"
                    },
					{
                        "name": "reason",
                        "in": "query",
                        "description": "Reason the encounter takes place (code). Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "special-arrangement",
                        "in": "query",
                        "description": "Wheelchair, translator, stretcher, etc. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "planned | arrived | in-progress | onleave | finished | cancelled. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    },
					{
                        "name": "type",
                        "in": "query",
                        "description": "Specific type of encounter. Value can have following formats: [code] or [system]|[code] or |[code].",
                        "type": "string"
                    }
			],
			"responses": {
				"200": {
					"description": "The set of resources associated with a particular encounter."
				},
				"default": {
					"description": "unexpected error"
				}
			}
		}
	}
    }
}