{
  "id" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
  "revisionNumber" : 1,
  "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
  "releaseVersion" : "1.0.0",
  "resources" : [ {
    "id" : "745bbbcc-04c3-4a0e-bd87-0f1160d429cd",
    "name" : "/{id}/{type}",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/{id}/{type}",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "b9707c19-dd96-42af-93ec-04360bfc2404",
      "name" : "/{id}/{type}-get",
      "displayName" : "Compartment Search",
      "description" : "<p>Search the specified resource type in Observation compartment.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "id",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Type of Observation",
        "name" : "type",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "_id",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
        "name" : "_elements",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_profile",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_tag",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_security",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "integer",
        "description" : "The number of Observations that should be returned in a single page.",
        "name" : "_count",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "boolean",
        "description" : "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
        "name" : "_summary",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_include",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_revinclude",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:asc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:desc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "category",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and concept. Value should be in the form: [code]$[concept].",
        "name" : "code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and date. Value should be in the form: [code]$[date].",
        "name" : "code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and string. Value should be in the form: [code]$[string].",
        "name" : "code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and concept. Value should be in the form: [code]$[concept].",
        "name" : "component-code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and date. Value should be in the form: [code]$[date].",
        "name" : "component-code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "component-code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and string. Value should be in the form: [code]$[string].",
        "name" : "component-code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
        "name" : "component-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
        "name" : "component-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Device that generated the observation data (Device, DeviceMetric).",
        "name" : "device",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Healthcare event related to the observation (Encounter).",
        "name" : "encounter",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "identifier",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Patient).",
        "name" : "patient",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
        "name" : "performer",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
        "name" : "related",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Observation that is related to this one (Observation).",
        "name" : "related-target",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "related-type",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specimen used for this observation (Specimen).",
        "name" : "specimen",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "status",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Device, Location, Patient, Group).",
        "name" : "subject",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
        "name" : "value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
        "name" : "value-string",
        "required" : false,
        "type" : "query"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189447,
      "modifiedTime" : 1443795370837,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/{id}/{type}",
      "resourceId" : "745bbbcc-04c3-4a0e-bd87-0f1160d429cd",
      "resourceName" : "/{id}/{type}",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/{id}/{type}",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "f8a27fbd-6241-49d3-931a-02910461c813",
    "name" : "/{id}/_history/{vid}",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/{id}/_history/{vid}",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "9c0b1077-6271-4183-bdf9-ac9b2aa43321",
      "name" : "/{id}/_history/{vid}-get",
      "displayName" : "Observation Version Read",
      "description" : "<p>This interaction preforms a version specific read of Observation resource.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "id",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Version Id of observation",
        "name" : "vid",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189447,
      "modifiedTime" : 1443795377672,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/{id}/_history/{vid}",
      "resourceId" : "f8a27fbd-6241-49d3-931a-02910461c813",
      "resourceName" : "/{id}/_history/{vid}",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/{id}/_history/{vid}",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "40dae91d-7756-45ed-9010-ef1ec6f9963d",
    "name" : "",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "b7d00f05-5623-46be-b5e7-1284e74509a8",
      "name" : "-get",
      "displayName" : "Read Observations",
      "description" : "<p>Returns Observation based on filter criteria OR Provides provision for pagination (stateid, page, page_size &amp; _pretty are query parameters used for Paging).</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "_id",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
        "name" : "_elements",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_profile",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_tag",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_security",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "integer",
        "description" : "The number of Observations that should be returned in a single page.",
        "name" : "_count",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "boolean",
        "description" : "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
        "name" : "_summary",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_include",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_revinclude",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:asc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:desc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "category",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and concept. Value should be in the form: [code]$[concept].",
        "name" : "code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and date. Value should be in the form: [code]$[date].",
        "name" : "code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and string. Value should be in the form: [code]$[string].",
        "name" : "code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and concept. Value should be in the form: [code]$[concept].",
        "name" : "component-code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and date. Value should be in the form: [code]$[date].",
        "name" : "component-code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "component-code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and string. Value should be in the form: [code]$[string].",
        "name" : "component-code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
        "name" : "component-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
        "name" : "component-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Device that generated the observation data (Device, DeviceMetric).",
        "name" : "device",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Healthcare event related to the observation (Encounter).",
        "name" : "encounter",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "identifier",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Patient).",
        "name" : "patient",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
        "name" : "performer",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
        "name" : "related",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Observation that is related to this one (Observation).",
        "name" : "related-target",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "related-type",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specimen used for this observation (Specimen).",
        "name" : "specimen",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "status",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Device, Location, Patient, Group).",
        "name" : "subject",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
        "name" : "value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
        "name" : "value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Unique id associated with a page.",
        "name" : "stateid",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "number",
        "description" : "Observation resource offset.",
        "name" : "page",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "number",
        "description" : "The number of Observation resources requested in a page.",
        "name" : "page_size",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "boolean",
        "description" : "Set true to get prettified data.",
        "name" : "_pretty",
        "required" : false,
        "type" : "query"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189446,
      "modifiedTime" : 1443795378672,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "",
      "resourceId" : "40dae91d-7756-45ed-9010-ef1ec6f9963d",
      "resourceName" : "",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "e160759a-cc08-465c-803b-ad103d30461b",
    "name" : "/_history",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/_history",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "44ea1edc-7f29-4729-9711-b2a16d737bc2",
      "name" : "/_history-get",
      "displayName" : "Observations History",
      "description" : "<p>It retrieves the history of all resources of Observation.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "integer",
        "description" : "Number of records needed in response.",
        "name" : "_count",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Only include Observation versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
        "name" : "_since",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189446,
      "modifiedTime" : 1443795374588,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/_history",
      "resourceId" : "e160759a-cc08-465c-803b-ad103d30461b",
      "resourceName" : "/_history",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/_history",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "e0f9857f-5723-425a-a2ad-219d3b176f1f",
    "name" : "/_search",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/_search",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "d1bd6f5f-6826-48f5-8677-740761cc5336",
      "name" : "/_search-get",
      "displayName" : "Observations Search",
      "description" : "<p>Search Observations based on some filter criteria.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "_id",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
        "name" : "_elements",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_profile",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_tag",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_security",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "integer",
        "description" : "The number of Observations that should be returned in a single page.",
        "name" : "_count",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "boolean",
        "description" : "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
        "name" : "_summary",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_include",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_revinclude",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:asc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:desc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "category",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and concept. Value should be in the form: [code]$[concept].",
        "name" : "code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and date. Value should be in the form: [code]$[date].",
        "name" : "code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and string. Value should be in the form: [code]$[string].",
        "name" : "code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and concept. Value should be in the form: [code]$[concept].",
        "name" : "component-code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and date. Value should be in the form: [code]$[date].",
        "name" : "component-code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "component-code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and string. Value should be in the form: [code]$[string].",
        "name" : "component-code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
        "name" : "component-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
        "name" : "component-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Device that generated the observation data (Device, DeviceMetric).",
        "name" : "device",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Healthcare event related to the observation (Encounter).",
        "name" : "encounter",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "identifier",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Patient).",
        "name" : "patient",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
        "name" : "performer",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
        "name" : "related",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Observation that is related to this one (Observation).",
        "name" : "related-target",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "related-type",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specimen used for this observation (Specimen).",
        "name" : "specimen",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "status",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Device, Location, Patient, Group).",
        "name" : "subject",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
        "name" : "value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
        "name" : "value-string",
        "required" : false,
        "type" : "query"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189447,
      "modifiedTime" : 1443795375927,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/_search",
      "resourceId" : "e0f9857f-5723-425a-a2ad-219d3b176f1f",
      "resourceName" : "/_search",
      "resources" : [ ],
      "revisionNumber" : 1
    }, {
      "id" : "c001c6b6-3f5c-4488-adca-13290cc2ac7b",
      "name" : "/_search-post",
      "displayName" : "Observations Search",
      "description" : "<p>This interaction searches a set of Observations based on some filter criteria. Search interactions take a series of parameters of name'='value pairs encoded as an application/x-www-form-urlencoded submission for a POST.</p>\n",
      "verb" : "POST",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "defaultValue" : "application/x-www-form-urlencoded",
        "description" : "Specifies the format of data in body",
        "name" : "Content-Type",
        "required" : true,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "_id",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
        "name" : "_elements",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "_lastUpdated",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_profile",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_tag",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
        "name" : "_security",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "integer",
        "description" : "The number of Observations that should be returned in a single page.",
        "name" : "_count",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "boolean",
        "description" : "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
        "name" : "_summary",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any Observations that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_include",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
        "name" : "_revinclude",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:asc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
        "name" : "_sort:desc",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "category",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and concept. Value should be in the form: [code]$[concept].",
        "name" : "code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and date. Value should be in the form: [code]$[date].",
        "name" : "code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of code and string. Value should be in the form: [code]$[string].",
        "name" : "code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-code",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and concept. Value should be in the form: [code]$[concept].",
        "name" : "component-code-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and date. Value should be in the form: [code]$[date].",
        "name" : "component-code-value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
        "name" : "component-code-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Combination of component code and string. Value should be in the form: [code]$[string].",
        "name" : "component-code-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "component-value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
        "name" : "component-value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
        "name" : "component-value-string",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "data-absent-reason",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Device that generated the observation data (Device, DeviceMetric).",
        "name" : "device",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Healthcare event related to the observation (Encounter).",
        "name" : "encounter",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "identifier",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Patient).",
        "name" : "patient",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
        "name" : "performer",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
        "name" : "related",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Observation that is related to this one (Observation).",
        "name" : "related-target",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "related-type",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specimen used for this observation (Specimen).",
        "name" : "specimen",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "status",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The subject that the observation is about (Device, Location, Patient, Group).",
        "name" : "subject",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
        "name" : "value-concept",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
        "name" : "value-date",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
        "name" : "value-quantity",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
        "name" : "value-string",
        "required" : false,
        "type" : "query"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
          "name" : "_id",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
          "name" : "_elements",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
          "name" : "_lastUpdated",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The search parameter _lastUpdated can be used to select Observations based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
          "name" : "_lastUpdated",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "This parameter searches on the profile element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
          "name" : "_profile",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "This parameter searches on the tags element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
          "name" : "_tag",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "This parameter searches on the security element in the meta element of the Observation. Value can have following formats: [code] or [namespace]|[code] or |[code].",
          "name" : "_security",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "integer",
          "description" : "The number of Observations that should be returned in a single page.",
          "name" : "_count",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "boolean",
          "description" : "The _summary parameter requests the server to return only the elements marked as summary in their definition. ",
          "name" : "_summary",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "This parameter can be used to fetch a particular Observation, and any Observations that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
          "name" : "_include",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "This parameter can be used to fetch a particular Observation, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes. 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
          "name" : "_revinclude",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
          "name" : "_sort",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
          "name" : "_sort:asc",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
          "name" : "_sort:desc",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The classification of the type of observation. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "category",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "code",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of code and concept. Value should be in the form: [code]$[concept].",
          "name" : "code-value-concept",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of code and date. Value should be in the form: [code]$[date].",
          "name" : "code-value-date",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of code and quantity. Value should be in the form: [code]$[quantity].",
          "name" : "code-value-quantity",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of code and string. Value should be in the form: [code]$[string].",
          "name" : "code-value-string",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The component code of the observation type. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "component-code",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of component code and concept. Value should be in the form: [code]$[concept].",
          "name" : "component-code-value-concept",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of component code and date. Value should be in the form: [code]$[date].",
          "name" : "component-code-value-date",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of component code and quantity. Value should be in the form: [code]$[quantity].",
          "name" : "component-code-value-quantity",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Combination of component code and string. Value should be in the form: [code]$[string].",
          "name" : "component-code-value-string",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The reason why the expected value in the element Observation.value[x] is missing. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "component-data-absent-reason",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the component observation, if the value is a CodeableConcept.Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "component-value-concept",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the component observation, if the value is a Quantity, or a SampledData.Value can have following formats: [prefix][number]|[system]|[code]",
          "name" : "component-value-quantity",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
          "name" : "component-value-string",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The reason why the expected value in the element Observation.value[x] is missing.Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "data-absent-reason",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
          "name" : "date",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
          "name" : "date",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The Device that generated the observation data (Device, DeviceMetric).",
          "name" : "device",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Healthcare event related to the observation (Encounter).",
          "name" : "encounter",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The unique Id for a particular observation. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "identifier",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The subject that the observation is about (Patient).",
          "name" : "patient",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Who performed the observation (Patient, Organization, Practitioner, RelatedPerson).",
          "name" : "performer",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Related Observations - search on related-type and related-target together. Value should be in the form: [related-type]$[related-target].",
          "name" : "related",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Observation that is related to this one (Observation).",
          "name" : "related-target",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "has-component | has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "related-type",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "Specimen used for this observation (Specimen).",
          "name" : "specimen",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The status of the observation. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "status",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The subject that the observation is about (Device, Location, Patient, Group).",
          "name" : "subject",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the observation, if the value is a CodeableConcept. Value can have following formats: [code] or [system]|[code] or |[code].",
          "name" : "value-concept",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
          "name" : "value-date",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the observation, if the value is a Period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
          "name" : "value-date",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the observation, if the value is a Quantity, or a SampledData. Value must be in the following format: [comparator][number]|[system]|[code].The default comparator is =.",
          "name" : "value-quantity",
          "required" : false,
          "type" : "body"
        }, {
          "allowMultiple" : false,
          "dataType" : "string",
          "description" : "The value of the observation, if the value is a string, and also searches in CodeableConcept.text.",
          "name" : "value-string",
          "required" : false,
          "type" : "body"
        } ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189446,
      "modifiedTime" : 1443795376972,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/_search",
      "resourceId" : "e0f9857f-5723-425a-a2ad-219d3b176f1f",
      "resourceName" : "/_search",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/_search",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "34e35b77-7128-4131-80fd-e195e33964d4",
    "name" : "/{id}/$meta",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/{id}/$meta",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "0da2b17e-4488-47bf-91af-f80a3477d708",
      "name" : "/{id}/$meta-get",
      "displayName" : "Observation Metadata",
      "description" : "<p>Retrieves a summary of the profiles, tags, and security labels for given Observation. Observation resource.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "id",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189447,
      "modifiedTime" : 1443795376494,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/{id}/$meta",
      "resourceId" : "34e35b77-7128-4131-80fd-e195e33964d4",
      "resourceName" : "/{id}/$meta",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/{id}/$meta",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "2033586d-6310-47a9-8034-c323690ab1fe",
    "name" : "/{id}",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/{id}",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "413a4d6d-f27f-4252-aa1a-9052a0889ca1",
      "name" : "/{id}-get",
      "displayName" : "Read Observation ",
      "description" : "<p>Returns details of observations having id given in path</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "id",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189447,
      "modifiedTime" : 1443795355996,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/{id}",
      "resourceId" : "2033586d-6310-47a9-8034-c323690ab1fe",
      "resourceName" : "/{id}",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/{id}",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "71ea952d-d105-4b07-907b-8d4e0b498d8e",
    "name" : "/{id}/_history",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/{id}/_history",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "d95f66e6-194c-4742-b4b6-caee358ba6f0",
      "name" : "/{id}/_history-get",
      "displayName" : "Observation History",
      "description" : "<p>It retrieves the history of a particular Observation identified by the given id in path.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "integer",
        "description" : "Number of records needed in response.",
        "name" : "_count",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Only include Observation versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
        "name" : "_since",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "id",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189447,
      "modifiedTime" : 1443795358939,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/{id}/_history",
      "resourceId" : "71ea952d-d105-4b07-907b-8d4e0b498d8e",
      "resourceName" : "/{id}/_history",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/{id}/_history",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "597d3995-f5a8-4790-bade-f214aaf891c3",
    "name" : "/$meta",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/$meta",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "c1c4a117-de19-47f5-ab9f-7f1708a401aa",
      "name" : "/$meta-get",
      "displayName" : "Observations Metadata",
      "description" : "<p>Retrieves a summary of the profiles, tags, and security labels for Observation.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189446,
      "modifiedTime" : 1443795373237,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/$meta",
      "resourceId" : "597d3995-f5a8-4790-bade-f214aaf891c3",
      "resourceName" : "/$meta",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/$meta",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  }, {
    "id" : "592cc781-d36c-49fa-a828-e689d7df8e3c",
    "name" : "/{id}/_history/{vid}/$meta",
    "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
    "path" : "/{id}/_history/{vid}/$meta",
    "parameters" : [ {
      "dataType" : "string",
      "name" : "Content-Type",
      "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
      "type" : "header"
    } ],
    "methods" : [ {
      "id" : "216b6d3c-b95e-478a-b3d9-47f6034926a2",
      "name" : "/{id}/_history/{vid}/$meta-get",
      "displayName" : "Observation Version based Metadata",
      "description" : "<p>Retrieves a summary of the profiles, tags, and security labels for given version of the Observation.</p>\n",
      "verb" : "GET",
      "security" : [ "oauth-2-0" ],
      "parameters" : [ {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "",
        "name" : "Content-Type",
        "options" : [ "application/json+fhir;charset=UTF-8", "application/xml+fhir;charset=UTF-8" ],
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Format of data to be returned.",
        "name" : "_format",
        "required" : false,
        "type" : "query"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The logical resource id associated with the Observation. Sample ids are: 17611, 17614, 17629, 17650, 17648.",
        "name" : "id",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Version Id of observation.",
        "name" : "vid",
        "required" : true,
        "type" : "template"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "Specify access token for API in the following format: Bearer [access_token].",
        "name" : "Authorization",
        "required" : false,
        "type" : "header"
      }, {
        "allowMultiple" : false,
        "dataType" : "string",
        "description" : "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
        "name" : "Accept",
        "required" : false,
        "type" : "header"
      } ],
      "body" : {
        "attachments" : [ ],
        "contentType" : "application/json+fhir;charset=UTF-8,application/xml+fhir;charset=UTF-8",
        "parameters" : [ ]
      },
      "response" : {
        "errors" : [ ],
        "parameters" : [ ]
      },
      "customAttributes" : {
        "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]"
      },
      "createdTime" : 1443789189447,
      "modifiedTime" : 1443795373760,
      "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
      "baseUrl" : "https://fhirsandbox-test.apigee.net/v2/Observation",
      "methods" : [ ],
      "path" : "/{id}/_history/{vid}/$meta",
      "resourceId" : "592cc781-d36c-49fa-a828-e689d7df8e3c",
      "resourceName" : "/{id}/_history/{vid}/$meta",
      "resources" : [ ],
      "revisionNumber" : 1
    } ],
    "customAttributes" : {
      "SWAGGER_RESOURCE_PATH" : "/{id}/_history/{vid}/$meta",
      "SWAGGER_PRODUCES" : "[ \"application/json+fhir;charset=UTF-8\", \"application/xml+fhir;charset=UTF-8\" ]",
      "SWAGGER_PROTOCOLS" : "[ \"https\" ]"
    },
    "createdTime" : 1443789189442,
    "apiRevisionId" : "f365c3d9-db87-4c06-a6cd-508f7fb3ec9a",
    "resources" : [ ],
    "revisionNumber" : 1
  } ],
  "customAttributes" : {
    "SWAGGER_INFO" : "{\n  \"description\" : \"FHIR Observation resource API documentation\",\n  \"version\" : \"1.0.0\",\n  \"title\" : \"Observation API\"\n}",
    "SWAGGER_VERSION" : "2.0"
  },
  "createdTime" : 1443789189423
}